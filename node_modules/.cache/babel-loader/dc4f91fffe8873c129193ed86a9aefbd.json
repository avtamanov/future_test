{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\react-future_test\\\\src\\\\Components\\\\Table\\\\SuperPaginator.js\";\nimport React, { useEffect, useState } from 'react';\nconst SuperPageIcon = React.memo(function ({\n  pageNum,\n  onClick\n}) {\n  onClick = onClick.bind(this, pageNum);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: 'page ' + pageNum,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, pageNum);\n});\nconst SuperPaginator = React.memo(function ({\n  page,\n  setPage,\n  linesTotal,\n  linesOnPage,\n  searchString\n}) {\n  const [pages, setPages] = useState(1);\n  useEffect(() => {\n    // form paginator\n    setPages(linesTotal / linesOnPage);\n    onPageClick(1);\n  }, [linesTotal, linesOnPage, searchString]);\n\n  let onPageClick = pageNum => {\n    console.log(pageNum);\n    let lastPageIcon = document.getElementsByClassName('page ' + page);\n\n    if (lastPageIcon[0] !== undefined) {\n      lastPageIcon[0].style.backgroundColor = 'white';\n      lastPageIcon[0].style.color = 'green';\n    }\n\n    let newPageIcon = document.getElementsByClassName('page ' + pageNum);\n\n    if (newPageIcon[0] !== undefined) {\n      newPageIcon[0].style.backgroundColor = 'green';\n      newPageIcon[0].style.color = 'white';\n      setPage(pageNum);\n    }\n  }; // form jsx\n\n\n  let pageIcons = [];\n\n  for (let i = 0; i < pages; i++) {\n    pageIcons.push( /*#__PURE__*/React.createElement(SuperPageIcon, {\n      key: i + 1,\n      pageNum: i + 1,\n      onClick: onPageClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paginator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, pageIcons);\n});\nexport default SuperPaginator;","map":{"version":3,"sources":["C:/Users/User/WebstormProjects/react-future_test/src/Components/Table/SuperPaginator.js"],"names":["React","useEffect","useState","SuperPageIcon","memo","pageNum","onClick","bind","SuperPaginator","page","setPage","linesTotal","linesOnPage","searchString","pages","setPages","onPageClick","console","log","lastPageIcon","document","getElementsByClassName","undefined","style","backgroundColor","color","newPageIcon","pageIcons","i","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAGA,MAAMC,aAAa,GAAGH,KAAK,CAACI,IAAN,CAAW,UAAU;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAV,EAA8B;AAE3DA,EAAAA,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,IAAb,EAAmBF,OAAnB,CAAV;AAEA,sBAAO;AAAQ,IAAA,SAAS,EAAE,UAAUA,OAA7B;AAAsC,IAAA,OAAO,EAAEC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDD,OAAzD,CAAP;AACH,CALqB,CAAtB;AAOA,MAAMG,cAAc,GAAGR,KAAK,CAACI,IAAN,CAAW,UAAU;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAV,EAAkE;AAEhG,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV;AACAc,IAAAA,QAAQ,CAACJ,UAAU,GAAGC,WAAd,CAAR;AACAI,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAJQ,EAIN,CAACL,UAAD,EAAaC,WAAb,EAA0BC,YAA1B,CAJM,CAAT;;AAMA,MAAIG,WAAW,GAAIX,OAAD,IAAa;AAC3BY,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACA,QAAIc,YAAY,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,UAAUZ,IAA1C,CAAnB;;AACA,QAAGU,YAAY,CAAC,CAAD,CAAZ,KAAoBG,SAAvB,EAAiC;AAC7BH,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBI,KAAhB,CAAsBC,eAAtB,GAAwC,OAAxC;AACAL,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBI,KAAhB,CAAsBE,KAAtB,GAA8B,OAA9B;AACH;;AAED,QAAIC,WAAW,GAAGN,QAAQ,CAACC,sBAAT,CAAgC,UAAUhB,OAA1C,CAAlB;;AACA,QAAGqB,WAAW,CAAC,CAAD,CAAX,KAAmBJ,SAAtB,EAAiC;AAC7BI,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAeH,KAAf,CAAqBC,eAArB,GAAuC,OAAvC;AACAE,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAeH,KAAf,CAAqBE,KAArB,GAA6B,OAA7B;AACAf,MAAAA,OAAO,CAACL,OAAD,CAAP;AACH;AACJ,GAdD,CAVgG,CA0BhG;;;AACA,MAAIsB,SAAS,GAAG,EAAhB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,KAAnB,EAA0Bc,CAAC,EAA3B,EAA8B;AAC1BD,IAAAA,SAAS,CAACE,IAAV,eAAe,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED,CAAC,GAAC,CAAtB;AAAyB,MAAA,OAAO,EAAEA,CAAC,GAAC,CAApC;AAAuC,MAAA,OAAO,EAAEZ,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AACH;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFW,SADE,CAAP;AAGH,CAnCsB,CAAvB;AAqCA,eAAenB,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst SuperPageIcon = React.memo(function ({pageNum, onClick}) {\r\n\r\n    onClick = onClick.bind(this, pageNum);\r\n\r\n    return <button className={'page ' + pageNum} onClick={onClick}>{pageNum}</button>\r\n});\r\n\r\nconst SuperPaginator = React.memo(function ({page, setPage, linesTotal, linesOnPage, searchString}) {\r\n\r\n    const [pages, setPages] = useState(1);\r\n\r\n    useEffect(()=>{\r\n        // form paginator\r\n        setPages(linesTotal / linesOnPage);\r\n        onPageClick(1);\r\n    }, [linesTotal, linesOnPage, searchString]);\r\n\r\n    let onPageClick = (pageNum) => {\r\n        console.log(pageNum)\r\n        let lastPageIcon = document.getElementsByClassName('page ' + page);\r\n        if(lastPageIcon[0] !== undefined){\r\n            lastPageIcon[0].style.backgroundColor = 'white';\r\n            lastPageIcon[0].style.color = 'green';\r\n        }\r\n\r\n        let newPageIcon = document.getElementsByClassName('page ' + pageNum);\r\n        if(newPageIcon[0] !== undefined) {\r\n            newPageIcon[0].style.backgroundColor = 'green';\r\n            newPageIcon[0].style.color = 'white';\r\n            setPage(pageNum);\r\n        }\r\n    }\r\n\r\n    // form jsx\r\n    let pageIcons = [];\r\n    for(let i = 0; i < pages; i++){\r\n        pageIcons.push(<SuperPageIcon key={i+1} pageNum={i+1} onClick={onPageClick}/>)\r\n    }\r\n\r\n    return <div className='paginator'>\r\n        {pageIcons}\r\n    </div>\r\n});\r\n\r\nexport default SuperPaginator;"]},"metadata":{},"sourceType":"module"}