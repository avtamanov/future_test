{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\react-future_test\\\\src\\\\Components\\\\Table\\\\SuperTable.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport SuperHeader from './SuperHeader';\nimport SuperBody from './SuperBody';\nconst SuperTable = React.memo(function (props) {\n  const [curData, setCurData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [sortedTag, setSortedTag] = useState(''); // save data after receiving request\n\n  useEffect(() => {\n    let tempData;\n    if (curData.length > 0) tempData = curData;else tempData = props.data;\n\n    if (tempData !== [] && tempData[0] !== undefined) {\n      let tempColumns = [];\n\n      for (let tempProps in tempData[0]) {\n        tempColumns.push(tempProps);\n      }\n\n      setColumns(tempColumns);\n      setCurData(tempData);\n    }\n  }, [props, curData]); // sorting callback func\n\n  useEffect(() => {\n    console.log('sort');\n    if (sortedTag.includes('+')) setCurData(curData.reverse());else setCurData(curData.sort((a, b) => +(a[sortedTag] < b[sortedTag])));\n  }, [sortedTag]);\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }, sortedTag, /*#__PURE__*/React.createElement(SuperHeader, {\n    columns: columns,\n    sortedTag: sortedTag,\n    setSortedTag: setSortedTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SuperBody, {\n    data: curData,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n});\nexport default SuperTable;","map":{"version":3,"sources":["C:/Users/User/WebstormProjects/react-future_test/src/Components/Table/SuperTable.js"],"names":["React","useCallback","useEffect","useState","SuperHeader","SuperBody","SuperTable","memo","props","curData","setCurData","columns","setColumns","sortedTag","setSortedTag","tempData","length","data","undefined","tempColumns","tempProps","push","console","log","includes","reverse","sort","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,UAAU,GAAGN,KAAK,CAACO,IAAN,CAAW,UAASC,KAAT,EAAe;AAEzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAJyC,CAMzC;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIa,QAAJ;AACA,QAAGN,OAAO,CAACO,MAAR,GAAiB,CAApB,EAAuBD,QAAQ,GAAGN,OAAX,CAAvB,KACKM,QAAQ,GAAGP,KAAK,CAACS,IAAjB;;AAEL,QAAGF,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,CAAC,CAAD,CAAR,KAAgBG,SAAtC,EAAgD;AAC5C,UAAIC,WAAW,GAAG,EAAlB;;AACA,WAAI,IAAIC,SAAR,IAAqBL,QAAQ,CAAC,CAAD,CAA7B,EAAiC;AAC7BI,QAAAA,WAAW,CAACE,IAAZ,CAAiBD,SAAjB;AACH;;AACDR,MAAAA,UAAU,CAACO,WAAD,CAAV;AACAT,MAAAA,UAAU,CAACK,QAAD,CAAV;AACH;AACJ,GAbQ,EAaP,CAACP,KAAD,EAAQC,OAAR,CAbO,CAAT,CAPyC,CAsBzC;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAGV,SAAS,CAACW,QAAV,CAAmB,GAAnB,CAAH,EAA4Bd,UAAU,CAACD,OAAO,CAACgB,OAAR,EAAD,CAAV,CAA5B,KACKf,UAAU,CAACD,OAAO,CAACiB,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAQ,EAAED,CAAC,CAACd,SAAD,CAAD,GAAee,CAAC,CAACf,SAAD,CAAlB,CAArB,CAAD,CAAV;AACR,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFA,SADE,eAEH,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,OAAtB;AAA+B,IAAA,SAAS,EAAEE,SAA1C;AAAqD,IAAA,YAAY,EAAEC,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,eAGH,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEL,OAAjB;AAA0B,IAAA,OAAO,EAAEE,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHG,CAAP;AAKH,CAlCkB,CAAnB;AAoCA,eAAeL,UAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport SuperHeader from './SuperHeader'\r\nimport SuperBody from './SuperBody'\r\n\r\nconst SuperTable = React.memo(function(props){\r\n\r\n    const [curData, setCurData] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [sortedTag, setSortedTag] = useState('');\r\n\r\n    // save data after receiving request\r\n    useEffect(()=>{\r\n        let tempData;\r\n        if(curData.length > 0) tempData = curData;\r\n        else tempData = props.data;\r\n\r\n        if(tempData !== [] && tempData[0] !== undefined){\r\n            let tempColumns = []\r\n            for(let tempProps in tempData[0]){\r\n                tempColumns.push(tempProps);\r\n            }\r\n            setColumns(tempColumns);\r\n            setCurData(tempData);\r\n        }\r\n    },[props, curData]);\r\n\r\n    // sorting callback func\r\n    useEffect(() => {\r\n        console.log('sort');\r\n        if(sortedTag.includes('+')) setCurData(curData.reverse());\r\n        else setCurData(curData.sort((a,b)=> +(a[sortedTag] < b[sortedTag]) ));\r\n    }, [sortedTag]);\r\n\r\n    return <table>\r\n        {sortedTag}\r\n        <SuperHeader columns={columns} sortedTag={sortedTag} setSortedTag={setSortedTag}/>\r\n        <SuperBody data={curData} columns={columns}/>\r\n    </table>\r\n});\r\n\r\nexport default SuperTable;"]},"metadata":{},"sourceType":"module"}