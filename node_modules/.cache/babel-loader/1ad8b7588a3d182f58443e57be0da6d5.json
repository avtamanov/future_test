{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\react-future_test\\\\src\\\\Components\\\\Table\\\\SuperTable.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport SuperHeader from './SuperHeader';\nimport SuperBody from './SuperBody';\nimport SuperPaginator from \"./SuperPaginator\";\nimport SuperLinesSelector from \"./SuperLinesSelector\";\nimport SuperSearch from \"./SuperSearch\";\nconst LINES_ON_PAGE = 50; // lines on page by default\n\ndocument.addEventListener('keydown', event => {\n  const keyName = event.key;\n\n  if (keyName === 'Control') {\n    // do not alert when only Control key is pressed.\n    return;\n  }\n\n  if (event.ctrlKey) {\n    // Even though event.key is not 'Control' (e.g., 'a' is pressed),\n    // event.ctrlKey may be true if Ctrl key is pressed at the same time.\n    alert(`Combination of ctrlKey + ${keyName}`);\n  } else {\n    alert(`Key pressed ${keyName}`);\n  }\n}, false);\ndocument.addEventListener('keyup', event => {\n  const keyName = event.key; // As the user releases the Ctrl key, the key is no longer active,\n  // so event.ctrlKey is false.\n\n  if (keyName === 'Control') {\n    alert('Control key was released');\n  }\n}, false);\nconst SuperTable = React.memo(function (props) {\n  const [totalData, setTotalData] = useState([]);\n  const [curData, setCurData] = useState([]);\n  const [columnNames, setColumnsNames] = useState([]);\n  const [sortedTag, setSortedTag] = useState('');\n  const [searchStr, setSearchStr] = useState('');\n  const [choosenPage, setChoosenPage] = useState(1);\n  const [linesOnPage, setLinesOnPage] = useState(LINES_ON_PAGE); // save data after receiving request\n\n  useEffect(() => {\n    if (props.data && props.data !== [] && props.data[0] !== undefined) {\n      // set column names\n      let tempColumns = [];\n\n      for (let tempProps in props.data[0]) {\n        tempColumns.push(tempProps);\n      }\n\n      setColumnsNames(tempColumns);\n      setTotalData(props.data); // form pages\n\n      let shownData = [];\n\n      for (let i = linesOnPage * (choosenPage - 1); i < linesOnPage * choosenPage && i < props.data.length; i++) {\n        shownData.push(props.data[i]);\n      }\n\n      setCurData(shownData);\n    }\n  }, [props]);\n  useEffect(() => {\n    // search\n    let searchedData = [];\n\n    if (searchStr !== '') {\n      for (let i = 0; i < totalData.length; i++) {\n        for (let itemProp in totalData[i]) {\n          if (('' + totalData[i][itemProp]).toLowerCase().includes(searchStr)) {\n            searchedData.push(totalData[i]);\n            break;\n          }\n        }\n      }\n    } else {\n      searchedData = totalData;\n    }\n\n    console.log(searchedData); // update pages\n\n    let shownData = [];\n\n    for (let i = linesOnPage * (choosenPage - 1); i < linesOnPage * choosenPage && i < searchedData.length; i++) {\n      shownData.push(searchedData[i]);\n    }\n\n    setCurData(shownData);\n  }, [choosenPage, linesOnPage, searchStr, totalData]); // save data after sort\n\n  useEffect(() => {\n    if (sortedTag) {\n      if (sortedTag.includes('+')) {\n        setTotalData([...totalData.reverse()]);\n        setChoosenPage(1);\n      } else {\n        setTotalData([...totalData.sort((a, b) => a[sortedTag] < b[sortedTag] ? -1 : a[sortedTag] > b[sortedTag] ? 1 : 0)]);\n        setChoosenPage(1);\n      }\n    }\n  }, [sortedTag]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(SuperPaginator, {\n    page: choosenPage,\n    setPage: setChoosenPage,\n    linesTotal: props.data && props.data !== [] ? props.data.length : 0,\n    linesOnPage: linesOnPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SuperLinesSelector, {\n    lines: linesOnPage,\n    setLines: setLinesOnPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SuperSearch, {\n    str: searchStr,\n    setStr: setSearchStr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SuperHeader, {\n    columns: columnNames,\n    sortedTag: sortedTag,\n    setSortedTag: setSortedTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SuperBody, {\n    curData: curData,\n    setCurData: setCurData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })));\n});\nexport default SuperTable;","map":{"version":3,"sources":["C:/Users/User/WebstormProjects/react-future_test/src/Components/Table/SuperTable.js"],"names":["React","useCallback","useEffect","useState","SuperHeader","SuperBody","SuperPaginator","SuperLinesSelector","SuperSearch","LINES_ON_PAGE","document","addEventListener","event","keyName","key","ctrlKey","alert","SuperTable","memo","props","totalData","setTotalData","curData","setCurData","columnNames","setColumnsNames","sortedTag","setSortedTag","searchStr","setSearchStr","choosenPage","setChoosenPage","linesOnPage","setLinesOnPage","data","undefined","tempColumns","tempProps","push","shownData","i","length","searchedData","itemProp","toLowerCase","includes","console","log","reverse","sort","a","b"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport SuperHeader from './SuperHeader'\r\nimport SuperBody from './SuperBody'\r\nimport SuperPaginator from \"./SuperPaginator\";\r\nimport SuperLinesSelector from \"./SuperLinesSelector\";\r\nimport SuperSearch from \"./SuperSearch\";\r\n\r\nconst LINES_ON_PAGE = 50; // lines on page by default\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n    const keyName = event.key;\r\n\r\n    if (keyName === 'Control') {\r\n        // do not alert when only Control key is pressed.\r\n        return;\r\n    }\r\n\r\n    if (event.ctrlKey) {\r\n        // Even though event.key is not 'Control' (e.g., 'a' is pressed),\r\n        // event.ctrlKey may be true if Ctrl key is pressed at the same time.\r\n        alert(`Combination of ctrlKey + ${keyName}`);\r\n    } else {\r\n        alert(`Key pressed ${keyName}`);\r\n    }\r\n}, false);\r\n\r\ndocument.addEventListener('keyup', (event) => {\r\n    const keyName = event.key;\r\n\r\n    // As the user releases the Ctrl key, the key is no longer active,\r\n    // so event.ctrlKey is false.\r\n    if (keyName === 'Control') {\r\n        alert('Control key was released');\r\n    }\r\n}, false);\r\n\r\nconst SuperTable = React.memo(function(props){\r\n\r\n    const [totalData, setTotalData] = useState([]);\r\n    const [curData, setCurData] = useState([]);\r\n    const [columnNames, setColumnsNames] = useState([]);\r\n    const [sortedTag, setSortedTag] = useState('');\r\n    const [searchStr, setSearchStr] = useState('');\r\n\r\n    const [choosenPage, setChoosenPage] = useState(1);\r\n    const [linesOnPage, setLinesOnPage] = useState(LINES_ON_PAGE);\r\n\r\n    // save data after receiving request\r\n    useEffect(()=>{\r\n        if(props.data && props.data !== [] && props.data[0] !== undefined){\r\n            // set column names\r\n            let tempColumns = []\r\n            for(let tempProps in props.data[0]){\r\n                tempColumns.push(tempProps);\r\n            }\r\n            setColumnsNames(tempColumns);\r\n            setTotalData(props.data);\r\n\r\n            // form pages\r\n            let shownData = [];\r\n            for(let i = linesOnPage*(choosenPage - 1); i < linesOnPage*choosenPage && i < props.data.length; i++){\r\n                shownData.push(props.data[i]);\r\n            }\r\n            setCurData(shownData);\r\n        }\r\n    },[props]);\r\n\r\n    useEffect(()=>{\r\n        // search\r\n        let searchedData = [];\r\n        if(searchStr !== '') {\r\n            for (let i = 0; i < totalData.length; i++) {\r\n                for (let itemProp in totalData[i]) {\r\n                    if (('' + totalData[i][itemProp]).toLowerCase().includes(searchStr)) {\r\n                        searchedData.push(totalData[i]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            searchedData = totalData;\r\n        }\r\n        console.log(searchedData);\r\n        // update pages\r\n        let shownData = [];\r\n        for(let i = linesOnPage*(choosenPage - 1); i < linesOnPage*choosenPage && i < searchedData.length; i++){\r\n            shownData.push(searchedData[i]);\r\n        }\r\n        setCurData(shownData);\r\n    }, [choosenPage, linesOnPage, searchStr, totalData]);\r\n\r\n    // save data after sort\r\n    useEffect(() => {\r\n        if(sortedTag){\r\n            if(sortedTag.includes('+')) {\r\n                setTotalData([...totalData.reverse()]);\r\n                setChoosenPage(1)\r\n            }\r\n            else{\r\n                setTotalData([...totalData.sort((a, b) => a[sortedTag] < b[sortedTag] ? -1 : a[sortedTag] > b[sortedTag] ? 1 : 0)]);\r\n                setChoosenPage(1);\r\n            }\r\n        }\r\n    }, [sortedTag]);\r\n\r\n    return <div className='table'>\r\n        <SuperPaginator page={choosenPage}\r\n                        setPage={setChoosenPage}\r\n                        linesTotal={props.data && props.data !== [] ? props.data.length : 0}\r\n                        linesOnPage={linesOnPage}/>\r\n        <SuperLinesSelector lines={linesOnPage} setLines={setLinesOnPage}/>\r\n        <SuperSearch str={searchStr} setStr={setSearchStr}/>\r\n        <table>\r\n            <SuperHeader columns={columnNames} sortedTag={sortedTag} setSortedTag={setSortedTag}/>\r\n            <SuperBody curData={curData} setCurData={setCurData}/>\r\n        </table>\r\n    </div>\r\n});\r\n\r\nexport default SuperTable;"]},"metadata":{},"sourceType":"module"}