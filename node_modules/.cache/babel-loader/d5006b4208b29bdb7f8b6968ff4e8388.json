{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\react-future_test\\\\src\\\\Components\\\\Table\\\\SuperBody.js\";\nimport React, { useEffect } from 'react';\nconst SuperBody = React.memo(function ({\n  data,\n  sortedTag,\n  setCurData\n}) {\n  // save data after sort\n  useEffect(() => {\n    console.log(sortedTag);\n    const tempData = data.sort((a, b) => a[sortedTag] < b[sortedTag] ? 1 : a[sortedTag] > b[sortedTag] ? -1 : 0);\n    if (!sortedTag.includes('+')) setCurData(tempData);else setCurData(tempData.reverse());\n    console.log('save data after sort');\n  }, [data, sortedTag]);\n\n  function dataTablePresentation(data) {\n    console.log('body boom');\n\n    if (data.length <= 0) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }\n      }, \"empty data\"));\n    } else {\n      let resultArr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        let tempRow = [];\n        let propCounter = 0;\n\n        for (let prop in data[i]) {\n          if (prop !== 'address') tempRow.push( /*#__PURE__*/React.createElement(\"td\", {\n            className: 'column ' + prop,\n            key: propCounter++,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 57\n            }\n          }, data[i][prop]));else if (prop === 'address') {\n            // {streetAddress, city, state, zip}\n            let tempAddress = '';\n\n            for (let position in data[i][prop]) {\n              tempAddress += data[i][prop][position] + ' ';\n            }\n\n            tempRow.push( /*#__PURE__*/React.createElement(\"td\", {\n              className: 'column ' + prop,\n              key: propCounter++,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 38\n              }\n            }, tempAddress));\n          }\n        }\n\n        resultArr.push( /*#__PURE__*/React.createElement(\"tr\", {\n          className: 'row ' + i,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }\n        }, tempRow));\n      }\n\n      return resultArr;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, sortedTag)), dataTablePresentation(data) || /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 45\n    }\n  }, \"body\")));\n});\nexport default SuperBody;","map":{"version":3,"sources":["C:/Users/User/WebstormProjects/react-future_test/src/Components/Table/SuperBody.js"],"names":["React","useEffect","SuperBody","memo","data","sortedTag","setCurData","console","log","tempData","sort","a","b","includes","reverse","dataTablePresentation","length","resultArr","i","tempRow","propCounter","prop","push","tempAddress","position"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\n\r\nconst SuperBody = React.memo(function({data, sortedTag, setCurData}){\r\n\r\n    // save data after sort\r\n    useEffect(() => {\r\n        console.log(sortedTag);\r\n        const tempData = data.sort((a,b)=> a[sortedTag] < b[sortedTag] ? 1 : a[sortedTag] > b[sortedTag] ? -1 : 0);\r\n\r\n        if(!sortedTag.includes('+'))\r\n            setCurData(tempData);\r\n        else\r\n            setCurData(tempData.reverse());\r\n        console.log('save data after sort');\r\n    }, [data,sortedTag]);\r\n\r\n\r\n    function dataTablePresentation(data){\r\n        console.log('body boom');\r\n        if(data.length <= 0){\r\n            return <tr><td>empty data</td></tr>;\r\n        }\r\n        else {\r\n\r\n            let resultArr = [];\r\n            for(let i = 0; i < data.length; i++){\r\n                let tempRow = [];\r\n                let propCounter = 0;\r\n                for(let prop in data[i]){\r\n                    if(prop !== 'address') tempRow.push(<td className={'column '+prop} key={propCounter++}>{data[i][prop]}</td>);\r\n                    else if(prop === 'address') {\r\n                        // {streetAddress, city, state, zip}\r\n                        let tempAddress = '';\r\n                        for(let position in data[i][prop]){\r\n                            tempAddress += data[i][prop][position] + ' ';\r\n                        }\r\n                        tempRow.push(<td className={'column '+prop} key={propCounter++}>{tempAddress}</td>);\r\n                    }\r\n                }\r\n                resultArr.push(<tr className={'row '+i} key={i}>{tempRow}</tr>)\r\n            }\r\n            return resultArr\r\n        }\r\n    }\r\n\r\n    return <tbody>{/*div body*/}\r\n        <tr><td>{sortedTag}</td></tr>\r\n        {dataTablePresentation(data) || <tr><td>body</td></tr>}\r\n    </tbody>\r\n});\r\n\r\nexport default SuperBody;"]},"metadata":{},"sourceType":"module"}