{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\react-future_test\\\\src\\\\Components\\\\Table\\\\SuperBody.js\";\nimport React, { useEffect } from 'react';\nconst SuperBody = React.memo(function ({\n  curData,\n  sortedTag,\n  setCurData\n}) {\n  // save data after sort\n  useEffect(() => {\n    console.log(sortedTag); //const tempData = ;\n\n    if (!curData) {\n      console.log('return');\n      return;\n    }\n\n    if (sortedTag.includes('+')) {\n      console.log('strait sort');\n      setCurData([...curData.sort((a, b) => a[sortedTag] < b[sortedTag] ? 1 : a[sortedTag] > b[sortedTag] ? -1 : 0)]);\n    } else {\n      console.log('reverse sort');\n      setCurData([...curData.sort((a, b) => a[sortedTag] < b[sortedTag] ? -1 : a[sortedTag] > b[sortedTag] ? 1 : 0)]);\n    }\n    /*console.log(data);\r\n    console.log(tempData);\r\n    console.log(data === tempData);*/\n\n  }, [sortedTag]);\n\n  function dataTablePresentation(data) {\n    if (data && data.length > 0) {\n      let resultArr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        let tempRow = [];\n        let propCounter = 0;\n\n        for (let prop in data[i]) {\n          if (prop !== 'address') tempRow.push( /*#__PURE__*/React.createElement(\"td\", {\n            className: 'column ' + prop,\n            key: propCounter++,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 57\n            }\n          }, data[i][prop]));else if (prop === 'address') {\n            // {streetAddress, city, state, zip}\n            let tempAddress = '';\n\n            for (let position in data[i][prop]) {\n              tempAddress += data[i][prop][position] + ' ';\n            }\n\n            tempRow.push( /*#__PURE__*/React.createElement(\"td\", {\n              className: 'column ' + prop,\n              key: propCounter++,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 38\n              }\n            }, tempAddress));\n          }\n        }\n\n        resultArr.push( /*#__PURE__*/React.createElement(\"tr\", {\n          className: 'row ' + i,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }\n        }, tempRow));\n      }\n\n      return resultArr;\n    } else {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }\n      }, \"empty data\"));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, sortedTag)), dataTablePresentation(curData) || /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 48\n    }\n  }, \"body\")));\n});\nexport default SuperBody;","map":{"version":3,"sources":["C:/Users/User/WebstormProjects/react-future_test/src/Components/Table/SuperBody.js"],"names":["React","useEffect","SuperBody","memo","curData","sortedTag","setCurData","console","log","includes","sort","a","b","dataTablePresentation","data","length","resultArr","i","tempRow","propCounter","prop","push","tempAddress","position"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\n\r\nconst SuperBody = React.memo(function({curData, sortedTag, setCurData}){\r\n\r\n    // save data after sort\r\n    useEffect(() => {\r\n        console.log(sortedTag);\r\n        //const tempData = ;\r\n        if (!curData) { console.log('return');\r\n            return;\r\n        }\r\n        if(sortedTag.includes('+')) { console.log('strait sort');\r\n            setCurData([...curData.sort((a, b) => a[sortedTag] < b[sortedTag] ? 1 : a[sortedTag] > b[sortedTag] ? -1 : 0)]);\r\n        }\r\n        else { console.log('reverse sort');\r\n            setCurData([...curData.sort((a, b) => a[sortedTag] < b[sortedTag] ? -1 : a[sortedTag] > b[sortedTag] ? 1 : 0)]);\r\n        }\r\n        /*console.log(data);\r\n        console.log(tempData);\r\n        console.log(data === tempData);*/\r\n    }, [sortedTag]);\r\n\r\n\r\n    function dataTablePresentation(data){\r\n        if(data && data.length > 0){\r\n            let resultArr = [];\r\n            for(let i = 0; i < data.length; i++){\r\n                let tempRow = [];\r\n                let propCounter = 0;\r\n                for(let prop in data[i]){\r\n                    if(prop !== 'address') tempRow.push(<td className={'column '+prop} key={propCounter++}>{data[i][prop]}</td>);\r\n                    else if(prop === 'address') {\r\n                        // {streetAddress, city, state, zip}\r\n                        let tempAddress = '';\r\n                        for(let position in data[i][prop]){\r\n                            tempAddress += data[i][prop][position] + ' ';\r\n                        }\r\n                        tempRow.push(<td className={'column '+prop} key={propCounter++}>{tempAddress}</td>);\r\n                    }\r\n                }\r\n                resultArr.push(<tr className={'row '+i} key={i}>{tempRow}</tr>)\r\n            }\r\n            return resultArr\r\n        } else {\r\n            return <tr><td>empty data</td></tr>;\r\n        }\r\n        }\r\n\r\n    return <tbody>{/*div body*/}\r\n        <tr><td>{sortedTag}</td></tr>\r\n        {dataTablePresentation(curData) || <tr><td>body</td></tr>}\r\n    </tbody>\r\n});\r\n\r\nexport default SuperBody;"]},"metadata":{},"sourceType":"module"}